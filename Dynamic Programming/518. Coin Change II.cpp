class Solution {
  /*
      處理硬幣 1
      c = 1，a 從 1 到 5：
      a = 1：dp[1] += dp[1-1] = dp[1] + dp[0] = 0 + 1 = 1（用 [1]）。
      a = 2：dp[2] += dp[2-1] = dp[2] + dp[1] = 0 + 1 = 1（用 [1,1]）。
      a = 3：dp[3] += dp[3-1] = 0 + 1 = 1（用 [1,1,1]）。
      a = 4：dp[4] += dp[4-1] = 0 + 1 = 1（用 [1,1,1,1]）。
      a = 5：dp[5] += dp[5-1] = 0 + 1 = 1（用 [1,1,1,1,1]）。
      dp = [1, 1, 1, 1, 1, 1]

      處理硬幣 2
      c = 2，a 從 2 到 5：
      a = 2：dp[2] += dp[2-2] = 1 + dp[0] = 1 + 1 = 2（[1,1], [2]）。
      a = 3：dp[3] += dp[3-2] = 1 + dp[1] = 1 + 1 = 2（[1,1,1], [2,1]）。
      a = 4：dp[4] += dp[4-2] = 1 + dp[2] = 1 + 2 = 3（[1,1,1,1], [2,1,1], [2,2]）。
      a = 5：dp[5] += dp[5-2] = 1 + dp[3] = 1 + 2 = 3（[1,1,1,1,1], [2,1,1,1], [2,2,1]）。
      dp = [1, 1, 2, 2, 3, 3]
      
      處理硬幣 5
      c = 5，a 從 5 到 5：
      a = 5：dp[5] += dp[5-5] = 3 + dp[0] = 3 + 1 = 4（[1,1,1,1,1], [2,1,1,1], [2,2,1], [5]）。
      dp = [1, 1, 2, 2, 3, 4]
  */
public:
  int change(int amount, vector<int>& coins) {
      vector<unsigned long long> dp(amount + 1, 0);
      dp[0] = 1;

      for (int c : coins) {
          for (int a = c; a <= amount; a++) {
              dp[a] += dp[a-c];
          }
      }

      return dp[amount];
  }
};